name: CI

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '.github/workflows/release.yml'
      - '.gitignore'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'README.md'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:
  workflow_dispatch:

permissions:
  contents: read
  checks: write

jobs:
  test:
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.workflow }}-test-${{ matrix.os }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current
      - name: Test with Gradle
        run: gradle check

  smoke-build:
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.workflow }}-build-${{ matrix.os }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current
      - name: Test with Gradle
        run: gradle build

  nix-flake:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-nix-linux-${{ github.event.pull_request.number || github.ref || github.run_id }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v30
      - uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1G
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never
      - name: Flake check
        run: nix flake check --all-systems
